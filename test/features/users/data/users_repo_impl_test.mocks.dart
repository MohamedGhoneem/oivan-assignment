// Mocks generated by Mockito 5.4.4 from annotations
// in oivan_assignment/test/features/users/data/users_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:oivan_assignment/features/users/data/ds/users_local_ds.dart'
    as _i7;
import 'package:oivan_assignment/features/users/data/ds/users_remote_ds.dart'
    as _i4;
import 'package:oivan_assignment/features/users/data/model/get_reputation_model.dart'
    as _i3;
import 'package:oivan_assignment/features/users/data/model/get_users_model.dart'
    as _i2;
import 'package:oivan_assignment/features/users/data/model/request_model.dart'
    as _i6;
import 'package:oivan_assignment/features/users/domain/entity/user_entity.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetUsersModel_0 extends _i1.SmartFake implements _i2.GetUsersModel {
  _FakeGetUsersModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetReputationModel_1 extends _i1.SmartFake
    implements _i3.GetReputationModel {
  _FakeGetReputationModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UsersRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersRemoteDataSource extends _i1.Mock
    implements _i4.UsersRemoteDataSource {
  MockUsersRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.GetUsersModel> getUsers(_i6.RequestModel? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [params],
        ),
        returnValue: _i5.Future<_i2.GetUsersModel>.value(_FakeGetUsersModel_0(
          this,
          Invocation.method(
            #getUsers,
            [params],
          ),
        )),
      ) as _i5.Future<_i2.GetUsersModel>);

  @override
  _i5.Future<_i3.GetReputationModel> getUserReputation(
    _i6.RequestModel? params,
    int? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserReputation,
          [
            params,
            userId,
          ],
        ),
        returnValue:
            _i5.Future<_i3.GetReputationModel>.value(_FakeGetReputationModel_1(
          this,
          Invocation.method(
            #getUserReputation,
            [
              params,
              userId,
            ],
          ),
        )),
      ) as _i5.Future<_i3.GetReputationModel>);
}

/// A class which mocks [UsersLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersLocalDataSource extends _i1.Mock
    implements _i7.UsersLocalDataSource {
  MockUsersLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<int>> getBookmarkedUserIds() => (super.noSuchMethod(
        Invocation.method(
          #getBookmarkedUserIds,
          [],
        ),
        returnValue: _i5.Future<List<int>>.value(<int>[]),
      ) as _i5.Future<List<int>>);

  @override
  _i5.Future<List<_i8.UserEntity>> getBookmarkedUsers() => (super.noSuchMethod(
        Invocation.method(
          #getBookmarkedUsers,
          [],
        ),
        returnValue: _i5.Future<List<_i8.UserEntity>>.value(<_i8.UserEntity>[]),
      ) as _i5.Future<List<_i8.UserEntity>>);

  @override
  _i5.Future<void> toggleBookmark(_i8.UserEntity? user) => (super.noSuchMethod(
        Invocation.method(
          #toggleBookmark,
          [user],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #clearBookmarks,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
